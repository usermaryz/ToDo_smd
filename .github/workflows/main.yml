name: Flutter CI

on:
  push:
    branches: [ "main", "fourth-phase" ]
  pull_request:
    branches: [ "main", "fourth-phase" ]

jobs:
  flt:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none

      - name: Run linter
        run: flutter analyze
        continue-on-error: true

      - name: Run tests
        run: flutter test
        continue-on-error: true

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install dependencies
        run: flutter pub get

      - name: Build apk
        run: flutter build apk

      - uses: actions/upload-artifact@master
        with:
          name: apk
          path: build/app/outputs/flutter-apk/app-release.apk

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@master
        with:
          name: apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Set token as environment variable
        run: export FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }} | FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}
        
      - name: test
        run: echo $FIREBASE_APP_ID | echo $FIREBASE_APP_ID

      - name: Upload apk to Firebase distribution
        run: firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk --app $FIREBASE_APP_ID